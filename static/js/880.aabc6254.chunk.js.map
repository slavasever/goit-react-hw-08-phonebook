{"version":3,"file":"static/js/880.aabc6254.chunk.js","mappings":"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","sources":["Redux/contacts/contacts-selector.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\"};","import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { toast } from 'react-toastify';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'Redux/contacts/contacts-selector';\nimport contactsApi from 'Redux/contacts/contacts-API';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const contact = { name, number };\n\n    const isContactInList =\n      contacts &&\n      contacts.some(item => item.name.toLowerCase() === name.toLowerCase());\n\n    if (isContactInList) {\n      toast.warning(`\"${name}\" is already in contacts!`);\n      return;\n    }\n    dispatch(contactsApi.addContact(contact));\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={submitHandler} className={s.form}>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n        <Form.Label className=\"text-light\">Name</Form.Label>\n        <Form.Control\n          name=\"name\"\n          type=\"name\"\n          placeholder=\"Enter your name\"\n          required\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPhone\">\n        <Form.Label className=\"text-light\">Phone</Form.Label>\n        <Form.Control name=\"number\" type=\"phone\" placeholder=\"Phone\" required />\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Add contact\n      </Button>\n      <hr />\n    </Form>\n  );\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"text\":\"ContactItem_text__6hT0E\",\"button\":\"ContactItem_button__IRFBz\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport contactsApi from 'Redux/contacts/contacts-API';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={s.item}>\n      <p className={s.text}>\n        - {name}: {number}\n      </p>\n      <button\n        type=\"button\"\n        className={s.button}\n        onClick={() => dispatch(contactsApi.deleteContact(id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'Redux/contacts/contacts-selector';\nimport { useEffect } from 'react';\nimport contactsApi from 'Redux/contacts/contacts-API';\nimport ContactItem from 'components/ContactItem';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsApi.getContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(state => state.filter);\n\n  const contactsFiltration = () => {\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    return (\n      contacts &&\n      contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      )\n    );\n  };\n\n  return (\n    <>\n      {contacts &&\n        (contactsFiltration().length !== 0 ? (\n          <ul className=\"pl-0\">\n            {contactsFiltration().map(contact => {\n              const { id, name, number } = contact;\n\n              return (\n                <ContactItem key={id} id={id} name={name} number={number} />\n              );\n            })}\n          </ul>\n        ) : (\n          <div className=\"text\">No contacts found...</div>\n        ))}\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Filter_form__wVnxJ\"};","import FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'Redux/filter/slice';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const inputHandler = event => {\n    const { value } = event.currentTarget;\n    dispatch(setFilter(value));\n  };\n\n  const filterReset = () => {\n    dispatch(setFilter(''));\n  };\n\n  return (\n    <div className={s.form}>\n      <FloatingLabel\n        controlId=\"floatingInput\"\n        label=\"Find contacts by name\"\n        className=\"mb-3\"\n      >\n        <Form.Control\n          name=\"filter\"\n          value={filter}\n          onChange={inputHandler}\n          type=\"name\"\n          placeholder=\"Name\"\n        />\n      </FloatingLabel>\n      <Button variant=\"secondary\" type=\"button\" onClick={filterReset}>\n        Clear\n      </Button>\n    </div>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm';\nimport ContactsList from 'components/ContactsList';\nimport Filter from 'components/Filter';\n\nconst Contacts = () => {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContacts","state","contacts","dispatch","useDispatch","useSelector","Form","onSubmit","event","preventDefault","form","currentTarget","name","elements","value","number","contact","some","item","toLowerCase","toast","contactsApi","reset","className","s","controlId","type","placeholder","required","Button","variant","id","onClick","useEffect","filter","contactsFiltration","normalizedFilter","trim","includes","length","map","FloatingLabel","label","onChange","setFilter","ContactsList"],"sourceRoot":""}